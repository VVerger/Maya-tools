<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="kivu" label="KIVU">
    <memberTool name="reload_lkd"/>
    <memberTool name="assetGallery"/>
  </toolshelf>

  <tool name="reload_lkd" label="lkd_path" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import hou
import os
import re

def extract_assetFileName(path):
    # Remplacer les antislashs par des barres obliques
    normalized_path = path.replace('\\\\', '/')
    if 'houdini' in normalized_path:
        match = re.search(r'/([^/]+)/houdini/', normalized_path)
        if match:
            return match.group(1)
        return None
    elif 'maya' in normalized_path:
        match = re.search(r'/([^/]+)/maya/', normalized_path)
        if match:
            return match.group(1)
        return None



def usdImport_Path():
    fileName = extract_assetFileName(hou.getenv('HIPFILE'))
    publishPath = os.path.join('//Storage03/Partages/3D4/KIVU/04_asset/publish_input', fileName, 'modeling')
    if not os.path.exists(publishPath):
        print('no geo publish')
        return
    elif os.listdir(publishPath) ==[]:
        print('no geo publish')
        return
    else:
        publishList = os.listdir(publishPath)
        publishItem = [x for x in publishList if x.endswith('.usd')][0]
        publishPath = os.path.join(publishPath, publishItem)
        return publishPath
        

def usdExport_Path():
    fileName = extract_assetFileName(hou.getenv('HIPFILE'))
    name = hou.getenv('HIPNAME').split('_E_')[0] + '_P.usd'
    publishPath = os.path.join('//Storage03/Partages/3D4/KIVU/04_asset/publish_output', fileName, 'lookdev')
    if not os.path.exists(publishPath):
        os.makedirs(publishPath)
    publishPath = os.path.join(publishPath, name)
    return publishPath
    
    
importUSD = hou.node('/stage/componentgeometry1/sopnet/geo/usdimport')
if not '/publish_input' in importUSD.parm('filepath1').eval():
    importPath = usdImport_Path()
    importUSD.parm('filepath1').set(importPath)

fileName = extract_assetFileName(hou.getenv('HIPFILE'))
exportUSD = hou.node('/stage/' + fileName)
if not '/publish_output' in exportUSD.parm('lopoutput').eval():
    exportPath = usdExport_Path()
    exportUSD.parm('lopoutput').set(exportPath)

]]></script>
  </tool>

  <tool name="assetGallery" label="assetGallery" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import hou

hou.putenv("ASSETGALLERY_DATA_SOURCE", "//Storage03/Partages/3D4/KIVU/01_ressource/kivu_gallery/kivu_gallery.db")
print("1,2,3 ... KIVU!!!")]]></script>
  </tool>
</shelfDocument>
